// agent/metrics.js
import { Registry, collectDefaultMetrics, Counter, Histogram } from "prom-client";

// —Å–æ–∑–¥–∞—ë–º —Ä–µ–µ—Å—Ç—Ä –∏ –≤–∫–ª—é—á–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (CPU, –ø–∞–º—è—Ç—å –∏ —Ç.–ø.)
export const register = new Registry();
collectDefaultMetrics({ register });

// === –°—á—ë—Ç—á–∏–∫–∏ ===
export const totalQuestions = new Counter({
  name: "chat_questions_total",
  help: "–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤"
});

export const answeredByFAQ = new Counter({
  name: "chat_answered_by_faq_total",
  help: "–û—Ç–≤–µ—Ç—ã –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (FAQ)"
});

export const answeredByLLM = new Counter({
  name: "chat_answered_by_llm_total",
  help: "–û—Ç–≤–µ—Ç—ã –æ—Ç LLM"
});

// üëá —Ç–µ–ø–µ—Ä—å —Å –ª–µ–π–±–ª–æ–º "reason"
export const forwardedToOperator = new Counter({
  name: "chat_forwarded_to_operator_total",
  help: "–°–∫–æ–ª—å–∫–æ –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥–∞–Ω–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É",
  labelNames: ["reason"]
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, —á—Ç–æ–±—ã –º–µ—Ç—Ä–∏–∫–∏ –ø–æ—è–≤–∏–ª–∏—Å—å —Å—Ä–∞–∑—É —Å 0
forwardedToOperator.labels("explicit").inc(0);
forwardedToOperator.labels("fallback").inc(0);

// === –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ ===
export const responseTime = new Histogram({
  name: "chat_response_time_ms",
  help: "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ (ms)",
  buckets: [50, 100, 300, 1000, 3000, 10000]
});

// —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –º–µ—Ç—Ä–∏–∫–∏
register.registerMetric(totalQuestions);
register.registerMetric(answeredByFAQ);
register.registerMetric(answeredByLLM);
register.registerMetric(forwardedToOperator);
register.registerMetric(responseTime);

export async function getMetrics(req, res) {
  res.set("Content-Type", register.contentType);
  res.end(await register.metrics());
}